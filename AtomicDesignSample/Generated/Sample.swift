// Generated using Sourcery 0.17.0 â€” https://github.com/krzysztofzablocki/Sourcery
// DO NOT EDIT


["SampleButtonsView": Class: module = nil, typealiases = [:], isExtension = false, kind = class, accessLevel = internal, name = SampleButtonsView, isGeneric = false, localName = SampleButtonsView, variables = [Variable: name = sampleTitleLabel, typeName = UILabel!, isComputed = false, isStatic = false, readAccess = internal, writeAccess = internal, isMutable = true, defaultValue = nil, annotations = [:], attributes = ["IBOutlet": @IBOutlet], isFinal = false, isLazy = false, definedInTypeName = Optional(SampleButtonsView), actualDefinedInTypeName = Optional(SampleButtonsView), Variable: name = sample1Button, typeName = UIButton!, isComputed = false, isStatic = false, readAccess = internal, writeAccess = internal, isMutable = true, defaultValue = nil, annotations = [:], attributes = ["IBOutlet": @IBOutlet], isFinal = false, isLazy = false, definedInTypeName = Optional(SampleButtonsView), actualDefinedInTypeName = Optional(SampleButtonsView), Variable: name = sample2Button, typeName = UIButton!, isComputed = false, isStatic = false, readAccess = internal, writeAccess = internal, isMutable = true, defaultValue = nil, annotations = [:], attributes = ["IBOutlet": @IBOutlet], isFinal = false, isLazy = false, definedInTypeName = Optional(SampleButtonsView), actualDefinedInTypeName = Optional(SampleButtonsView), Variable: name = sample3Button, typeName = UIButton!, isComputed = false, isStatic = false, readAccess = internal, writeAccess = internal, isMutable = true, defaultValue = nil, annotations = [:], attributes = ["IBOutlet": @IBOutlet], isFinal = false, isLazy = false, definedInTypeName = Optional(SampleButtonsView), actualDefinedInTypeName = Optional(SampleButtonsView)], methods = [], subscripts = [], initializers = [], annotations = [:], staticVariables = [], staticMethods = [], classMethods = [], instanceVariables = [Variable: name = sampleTitleLabel, typeName = UILabel!, isComputed = false, isStatic = false, readAccess = internal, writeAccess = internal, isMutable = true, defaultValue = nil, annotations = [:], attributes = ["IBOutlet": @IBOutlet], isFinal = false, isLazy = false, definedInTypeName = Optional(SampleButtonsView), actualDefinedInTypeName = Optional(SampleButtonsView), Variable: name = sample1Button, typeName = UIButton!, isComputed = false, isStatic = false, readAccess = internal, writeAccess = internal, isMutable = true, defaultValue = nil, annotations = [:], attributes = ["IBOutlet": @IBOutlet], isFinal = false, isLazy = false, definedInTypeName = Optional(SampleButtonsView), actualDefinedInTypeName = Optional(SampleButtonsView), Variable: name = sample2Button, typeName = UIButton!, isComputed = false, isStatic = false, readAccess = internal, writeAccess = internal, isMutable = true, defaultValue = nil, annotations = [:], attributes = ["IBOutlet": @IBOutlet], isFinal = false, isLazy = false, definedInTypeName = Optional(SampleButtonsView), actualDefinedInTypeName = Optional(SampleButtonsView), Variable: name = sample3Button, typeName = UIButton!, isComputed = false, isStatic = false, readAccess = internal, writeAccess = internal, isMutable = true, defaultValue = nil, annotations = [:], attributes = ["IBOutlet": @IBOutlet], isFinal = false, isLazy = false, definedInTypeName = Optional(SampleButtonsView), actualDefinedInTypeName = Optional(SampleButtonsView)], instanceMethods = [], computedVariables = [], storedVariables = [Variable: name = sampleTitleLabel, typeName = UILabel!, isComputed = false, isStatic = false, readAccess = internal, writeAccess = internal, isMutable = true, defaultValue = nil, annotations = [:], attributes = ["IBOutlet": @IBOutlet], isFinal = false, isLazy = false, definedInTypeName = Optional(SampleButtonsView), actualDefinedInTypeName = Optional(SampleButtonsView), Variable: name = sample1Button, typeName = UIButton!, isComputed = false, isStatic = false, readAccess = internal, writeAccess = internal, isMutable = true, defaultValue = nil, annotations = [:], attributes = ["IBOutlet": @IBOutlet], isFinal = false, isLazy = false, definedInTypeName = Optional(SampleButtonsView), actualDefinedInTypeName = Optional(SampleButtonsView), Variable: name = sample2Button, typeName = UIButton!, isComputed = false, isStatic = false, readAccess = internal, writeAccess = internal, isMutable = true, defaultValue = nil, annotations = [:], attributes = ["IBOutlet": @IBOutlet], isFinal = false, isLazy = false, definedInTypeName = Optional(SampleButtonsView), actualDefinedInTypeName = Optional(SampleButtonsView), Variable: name = sample3Button, typeName = UIButton!, isComputed = false, isStatic = false, readAccess = internal, writeAccess = internal, isMutable = true, defaultValue = nil, annotations = [:], attributes = ["IBOutlet": @IBOutlet], isFinal = false, isLazy = false, definedInTypeName = Optional(SampleButtonsView), actualDefinedInTypeName = Optional(SampleButtonsView)], inheritedTypes = ["UIView"], containedTypes = [], parentName = nil, parentTypes = AnyIterator<Type>(_box: Swift._IteratorBox<Swift._ClosureBasedIterator<SourceryRuntime.Type>>), attributes = [:], kind = class, isFinal = false]
